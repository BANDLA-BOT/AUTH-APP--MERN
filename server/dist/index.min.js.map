{"version":3,"sources":["index.js"],"names":["_express","_interopRequireDefault","require","_mongoose","_dotenv","_userRoutes","_authRoute","dotenv","config","app","use","express","json","mongoose","connect","process","env","MONGO","then","console","log","err","message","listen","userRoutes","authRoute","req","res","statusCode","next","success"],"mappings":"aAAA,IAAAA,SAAAC,uBAAAC,QAAA,YACAC,UAAAF,uBAAAC,QAAA,aADAE,QAAAH,uBAAAC,QAAA,WAGAG,YAAAJ,uBAAAC,QAAA,2BAFAI,WAAAL,uBAAAC,QAAA,kGAIAK,QAAAA,QAAOC,SAHP,IAAAC,KAAA,EAAAT,SAAA,WAKAS,IAAIC,IAAIC,SAAAA,QAAQC,QAHhBC,UAAAA,QAAAC,QAAAC,QAAAC,IAAAC,OAOCC,KAAK,WACFC,QAAQC,IAAI,8BARhB,MACAb,SAAAA,GAUIY,QAAQC,IAAIC,EAAIC,WAGpBb,IAAIc,OAAO,IAAM,WARjBV,QAAAA,IAAAA,gCAcAJ,IAAIC,IAAI,YAAac,YAAAA,SACrBf,IAAIC,IAAI,YAAae,WAAAA,SAArBhB,IAAIC,IAAI,SAAAW,EAAAK,EAAAC,EAAaF,GAOjB,IAAMG,EAAaP,EAAIO,YAAc,IADjCN,EAACD,EAAKK,SAASG,wBACnB,OAAMD,EAAAA,OAAgBA,GAAHhB,KAAkB,CAC/BU,SAAUD,EAChBC,QAAAA,EACIQ,WAAAA","file":"index.min.js","sourcesContent":["import express from 'express'\r\nimport mongoose from 'mongoose'\r\nimport dotenv from 'dotenv'\r\nimport userRoutes from './routes/userRoutes.js'\r\nimport authRoute from './routes/authRoute.js'\r\ndotenv.config()\r\nconst app = express()\r\napp.use(express.json())\r\n\r\n//DATABASE\r\nmongoose.connect(process.env.MONGO)\r\n.then(()=>{\r\n    console.log('Connected to the Databae')\r\n})\r\n.catch((err)=>{\r\n    console.log(err.message)\r\n})\r\n//LISTENING TO SERVER\r\napp.listen(8000, ()=>{\r\n    console.log('Server running on Port 000')\r\n})\r\n\r\n\r\n//API's\r\napp.use('/api/user', userRoutes)\r\napp.use('/api/auth', authRoute)\r\n\r\n\r\n\r\n//ERROR HANDLING MIDDLEWARE\r\n\r\napp.use((err, req,res, next)=>{\r\n    const statusCode = err.statusCode || 500;\r\n    const message = err.message || 'Internal server error';\r\n    return res.status(statusCode).json({\r\n        success:false,\r\n        message,\r\n        statusCode\r\n    })\r\n})"]}