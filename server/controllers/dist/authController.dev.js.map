{"version":3,"sources":["authController.js"],"names":["signup","req","res","body","username","email","password","bcryptjs","genSalt","salt","hashedPassword","hashSync","newUser","User","save","status","json","message","Message","Error"],"mappings":";;;;;;;AAAA;;AACA;;;;AACO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAMC,GAAN,EAAUC,GAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACoBD,GAAG,CAACE,IADxB,EACVC,QADU,aACVA,QADU,EACAC,KADA,aACAA,KADA,EACOC,QADP,aACOA,QADP;AAAA;AAAA,0CAECC,qBAASC,OAAT,CAAiB,EAAjB,CAFD;;AAAA;AAEZC,UAAAA,IAFY;AAGZC,UAAAA,cAHY,GAGKH,qBAASI,QAAT,CAAkBL,QAAlB,EAA4BG,IAA5B,CAHL;AAIZG,UAAAA,OAJY,GAIF,IAAIC,qBAAJ,CAAS;AAACT,YAAAA,QAAQ,EAARA,QAAD;AAAWC,YAAAA,KAAK,EAALA,KAAX;AAAkBC,YAAAA,QAAQ,EAACI;AAA3B,WAAT,CAJE;AAAA;AAAA;AAAA,0CAMRE,OAAO,CAACE,IAAR,EANQ;;AAAA;AAOdZ,UAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,YAAAA,OAAO,EAAC;AAAT,WAArB;AAPc;AAAA;;AAAA;AAAA;AAAA;AASdf,UAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACE,YAAAA,OAAO,EAAC,uBAAT;AAAkCC,YAAAA,KAAK,EAAC,YAAMF;AAA9C,WAArB;;AATc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import User from '../models/user.model.js'\r\nimport bcryptjs from 'bcryptjs'\r\nexport const signup = async(req,res)=>{\r\n    const { username, email, password } = req.body\r\n    const salt = await bcryptjs.genSalt(10)\r\n    const hashedPassword = bcryptjs.hashSync(password, salt)\r\n    const newUser = new User({username, email, password:hashedPassword})\r\n    try {\r\n        await newUser.save()\r\n        res.status(201).json({message:\"registered successfully\"})\r\n    } catch (error) {\r\n        res.status(500).json({Message:\"Internal server error\", Error:error.message})\r\n    }\r\n\r\n}"],"file":"authController.dev.js"}