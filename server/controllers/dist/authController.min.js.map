{"version":3,"sources":["authController.js"],"names":["_userModel","_interopRequireDefault","require","_bcryptjs","signup","req","res","_req$body","username","email","password","salt","hashedPassword","newUser","regeneratorRuntime","async","_context","prev","next","body","awrap","bcryptjs","genSalt","sent","hashSync","User","save","status","json","message","t0","Message","Error","stop"],"mappings":"0FAAA,IAAAA,WAAAC,uBAAAC,QAAA,4BACAC,UAAAF,uBAAAC,QAAA,qFACO,IAAME,OAAS,SAAMC,EAAIC,GAAV,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAX,EACoBF,EAAIc,KAAlCX,EADUD,EACVC,SAAUC,EADAF,EACAE,MAAOC,EADPH,EACOG,SADPM,EAAAE,KAAA,EAAAJ,mBAAAM,MAECC,UAAAA,QAASC,QAAQ,KAFlB,KAAA,EAAA,OAEZX,EAFYK,EAAAO,KAGZX,EAAiBS,UAAAA,QAASG,SAASd,EAAUC,GAC7CE,EAAU,IAAIY,WAAAA,QAAK,CAACjB,SAAAA,EAAUC,MAAAA,EAAOC,SAASE,IAJlCI,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAM,MAMRP,EAAQa,QANA,KAAA,EADtBpB,EAAAqB,OAAA,KAAAC,KAAA,CAAAC,QAAA,4BACsBb,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAc,GAAAd,EAAA,MAAA,GASdV,EAAIqB,OAAO,KAAKC,KAAK,CAACG,QAAQ,wBAAyBC,MAAMhB,EAAAc,GAAMD,UATrD,KAAA,GAAA,IAAA,MAAA,OAAAb,EAAAiB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"authController.min.js","sourcesContent":["import User from '../models/user.model.js'\r\nimport bcryptjs from 'bcryptjs'\r\nexport const signup = async(req,res)=>{\r\n    const { username, email, password } = req.body\r\n    const salt = await bcryptjs.genSalt(10)\r\n    const hashedPassword = bcryptjs.hashSync(password, salt)\r\n    const newUser = new User({username, email, password:hashedPassword})\r\n    try {\r\n        await newUser.save()\r\n        res.status(201).json({message:\"registered successfully\"})\r\n    } catch (error) {\r\n        res.status(500).json({Message:\"Internal server error\", Error:error.message})\r\n    }\r\n\r\n}"]}